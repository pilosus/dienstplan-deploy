#####################################################################
# Initial App Service Setup: System group and user, Systemd service #
#####################################################################
---
- hosts: all
  become: true
  vars:
    jar_local_directory: ../dienstplan/target/uberjar/
    resources_local_directory: ../dienstplan/resources/
    app_version: 0.1.0-SNAPSHOT
    app_file: "dienstplan-{{ app_version }}-standalone.jar"
    app_resources: resources
  vars_files:
    - vars/default.yml
    - vars/service.yml
    - vars/env.yml

  tasks:
    - name: Get a user group for a service
      group:
        name: "{{ service_usergroup }}"
        system: yes
        state: present
      tags:
        - user

    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ service_username }}"
        groups: "{{ service_usergroup }}"
        state: present
        system: yes
        append: yes
        create_home: false
        shell: /sbin/nologin
      tags:
        - user

    - name: Create a directory for the service
      file:
        path: "{{ service_directory }}"
        state: directory
        owner: "{{ service_username }}"
        group: "{{ service_usergroup }}"
      tags:
        - path

    - name: Create the systemd service
      template:
        src: files/systemd_service.j2
        dest: "{{ systemd_service_file }}"
        owner: root
        group: root
        mode: "{{ service_files_chmod }}"
        backup: yes
      tags:
        - systemd

    - name: Create an env file for the systemd service
      template:
        src: files/systemd_env.j2
        dest: "{{ systemd_service_env }}"
        owner: root
        group: root
        mode: "{{ env_files_chmod }}"
      tags:
        - systemd
        - env

    - name: Copy the app file to remote server
      copy:
        src: "{{ jar_local_directory }}/{{ app_file }}"
        dest: "{{ service_directory }}/{{ app_file }}"
        owner: "{{ service_username }}"
        group: "{{ service_usergroup }}"
        mode: "{{ service_files_chmod }}"
      tags:
        - copy

    - name: Copy the app resources to remote server
      copy:
        src: "{{ resources_local_directory }}"
        dest: "{{ service_directory }}/{{ app_resources }}"
        owner: "{{ service_username }}"
        group: "{{ service_usergroup }}"
        mode: "{{ service_resources_chmod }}"
      tags:
        - copy

    - name: Enable and start the systemd service
      ansible.builtin.systemd:
        name: "{{ systemd_service_name }}"
        enabled: yes
        state: started
      tags:
        - systemd
