#
# Default server configuration
#

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	root /var/www/html;
        index index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}
}

#
# Service upstream
#

upstream backend {
         server {{ server_upstream_uri }};
}

#
# {{ server_domain_name }}
#

server {
        server_name {{ server_domain_name }}; # managed by Certbot

        # Certbot SSL support
        listen [::]:443 ssl ipv6only=on; # managed by Certbot
        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/{{ server_domain_name }}/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/{{ server_domain_name }}/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

	root /var/www/html;
        index index.html index.htm index.nginx-debian.html;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
	}

        location /api/ {
                proxy_pass http://backend;
                proxy_set_header  X-Real-IP $remote_addr;
                proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header  Host $http_host;
        }

}

#
# Redirect HTTP->HTTPS
#

server {
    if ($host = {{ server_domain_name }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80 ;
    listen [::]:80 ;
    server_name {{ server_domain_name }};
    return 404; # managed by Certbot
}
