#####################################################
# Initial Server Setup: Ubuntu 20.04, Security, JVM #
#####################################################
---
- hosts: all
  become: true
  vars_files:
    - vars/server.yml
    - vars/app.yml

  tasks:
    - name: Install aptitude
      apt: name=aptitude update_cache=yes state=latest force_apt_get=yes
      tags:
        - packages

    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ create_user }}"
        state: present
        groups: wheel
        append: true
        create_home: true
        shell: /bin/bash

    - name: Set authorized key for remote user
      authorized_key:
        user: "{{ create_user }}"
        state: present
        key: "{{ copy_local_key }}"

    - name: Disable password authentication for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'

    - name: Update apt
      apt: update_cache=yes
      tags:
        - packages

    - name: Install required system packages
      apt: name={{ sys_packages }} state=latest
      tags:
        - packages

    - name: Install Java related packages
      apt: name={{ java_packages }} state=latest
      tags:
        - packages
        - java

# Nginx

    - name: Install Nginx
      apt: name=nginx state=latest
      tags:
        - packages
        - nginx

# Certbot
    - name: Install certboot for Let's encrypt support
      # # https://certbot.eff.org/instructions?ws=nginx&os=ubuntu-20
      community.general.snap:
        name: certbot
        classic: yes
      tags:
        - packages
        - nginx
        - ssl

    - name: Link certbot binary
      raw: ln -fs /snap/bin/certbot /usr/bin/certbot
      become: yes
      tags:
        - ssl

    - name: Run certbot
      # https://eff-certbot.readthedocs.io/en/stable/using.html#certbot-command-line-options
      raw: certbot --non-interactive --nginx --agree-tos -m "{{ server_admin_email }}" -d "{{ server_domain_name }}"
      become: yes
      tags:
        - ssl

# Firewall
    - name: UFW - Allow SSH connections
      ufw:
        rule: allow
        name: OpenSSH
      tags:
        - security

    - name: UFW - Allow Nginx
      ufw:
        rule: allow
        name: "Nginx Full"
      tags:
        - security

    - name: UFW - Deny all other incoming traffic by default
      ufw:
        state: enabled
        policy: deny
        direction: incoming
